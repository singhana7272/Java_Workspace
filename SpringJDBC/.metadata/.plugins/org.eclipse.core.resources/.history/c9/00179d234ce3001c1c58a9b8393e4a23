package com.persistence;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

import javax.sql.DataSource;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Repository;

import com.bean.Employee;

public class EmployeeDaoImpl implements EmployeeDao {
	
	private JdbcTemplate jdbcTemplate;
	
	public void setJdbcTemplate(JdbcTemplate jdbcTemplate) {
		this.jdbcTemplate = jdbcTemplate;
	}

	@Override
	public boolean registerCourse(String empId, String courseId) throws ClassNotFoundException, SQLException {
		String query="insert into registrations(empId,course_id) values (?,?)";
		int row=jdbcTemplate.update(query, empId,courseId);
		if(row>0)
			return true;
		else
			return false;
	}
	
	@Override
	public boolean deregisterCourse(String empId, String courseId) throws ClassNotFoundException, SQLException {
		String query="delete from registrations where empId=? and course_id=?";
		int row=jdbcTemplate.update(query, empId,courseId);
		if(row==1)
			return true;
		else
			return false;
	}
	
	@Override
	public ArrayList<Employee> ShowAllEmployeesForCourseId(String courseId) throws ClassNotFoundException, SQLException {
		Connection connection=dataSource.getConnection();
		String query="select e.* from registrations r JOIN employees e ON r.empId=e.empId where course_id=?";
		PreparedStatement preparedStatement=connection.prepareStatement(query);
		preparedStatement.setString(1, courseId);
		ResultSet resultSet=preparedStatement.executeQuery();
		ArrayList<Employee> employees=new ArrayList<>();
		while(resultSet.next()) {
			String empId=resultSet.getString("empId");
			String empName=resultSet.getString("empName");
			String department=resultSet.getString("department");
			String designation=resultSet.getString("designation");
			int salary=resultSet.getInt("salary");
			
			Employee employee=new Employee(empId,empName,department,designation,salary);
			employees.add(employee);
		}
		connection.close();
		return employees;
	}
	
	
}
